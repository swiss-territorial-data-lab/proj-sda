# Prepare the AoI
prepare_aoi.py:  
  working_directory: data/AoI/
  canton: {canton}
  year: {year}
  srs: EPSG:2056
  img_footprint_shp: swissimage_footprints/{year}.shp

# Produce tile geometries based on the AoI extent and zoom level
prepare_data.py:  
  canton: {canton}
  datasets:
    shapefile: data/AoI/{canton}/aoi_{year}_{canton}.gpkg
  output_folder: output/det/{canton}/single_year
  zoom_level: 16
  dem: data/DEM/switzerland_dem_EPSG2056.tif

# Fetch of tiles (online server) and split into 3 datasets: train, test, validation
generate_tilesets.py:
  debug_mode: 
    enable: False  # sample of tiles
    nb_tiles_max: 2000
  working_directory: output/det/{canton}/single_year
  output_folder: .
  datasets:
    aoi_tiles: tiles.geojson
    image_source:
      type: XYZ                             # supported values: 1. MIL = Map Image Layer 2. WMS 3. XYZ 4. FOLDER
      year: {year}                  # supported values: 1. multi-year (tiles of different year), 2. <year> (i.e. 2020)
      location: https://wmts.geo.admin.ch/1.0.0/ch.swisstopo.swissimage-product/default/{year}/3857/{z}/{x}/{y}.jpeg
  tile_size: 256      # per side, in pixels
  overwrite: True
  n_jobs: 10
  seed: 2
  COCO_metadata:
    year: 2024
    version: 1.0
    description: Anthropogenic soils
    contributor: Ticino and Vaud
    url: 
    license:
      name: unknown
      url: unknown
    categories_file: ../../../../data/category_ids.json

# Object detection with the optimised trained model
make_detections.py:
  working_directory: output/det/{canton}/single_year
  output_folder: {model_dir}
  log_subfolder: logs
  sample_tagged_img_subfolder: {model_dir}/sample_tagged_images
  COCO_files:           # relative paths, w/ respect to the working_folder
    oth: COCO_oth.json
  detectron2_config_file: ../../../../config/detectron2_config.yaml # path relative to the working_folder
  model_weights:
    pth_file: ../../../../models/{model_file} # trained model minimising the validation loss curve, monitor the training process via tensorboard (tensorboard --logdir </logs>)
  image_metadata_json: img_metadata.json
  rdp_simplification:   # rdp = Ramer-Douglas-Peucker
    enabled: True
    epsilon: 2.0        # cf. https://rdp.readthedocs.io/en/latest/
  score_lower_threshold: 0.05
  remove_det_overlap: True  # if several detections overlap (IoU > 0.5), only the one with the highest confidence score is retained. Not recommended for use with a single class.

# Merge detections across tiles
merge_detections.py:
  working_directory: output/det/{canton}/single_year
  output_dir: {model_dir}
  detections:
    oth: {model_dir}/oth_detections_at_0dot05_threshold.gpkg
  distance: 10 # m, distance use as a buffer to merge close polygons (likely to belong to the same object) together
  iou_threshold: 0.1
  score_threshold: 0.05
  assess: 
    enable: False

# Merge results from various models
merge_multi_results.py:
  working_directory: output/det/{canton}/single_year
  output_directory: merged_results
  glob_det_path: "**/merged_detections_at_0dot05_threshold.gpkg"
  score_type: optimal   #  supported values: 1. conservative (= 0.05), 2. optimal (best for the model f1-score as defined in constants)
  categories: category_ids.json
  threshold: 0.1
  assess: 
    enable: False

# Merge results across years
merge_across_years.py:
  working_directory: output/det/{canton}/single_year
  output_directory: merged_results
  detections: merged_results/merged_detections_across_models.gpkg
  categories: category_ids.json
  assess: 
    enable: False

# Remove artifacts due to tile boders
remove_artifacts.py:
  working_directory: output/det/{canton}/single_year
  detections: merged_results/merged_detections_across_years.gpkg
  tiles: tiles.geojson
  close_area_min: 132500
  close_area_max: 200000
  iou_threshold: 0.75
  
# Filtering and merging detection polygons to improve final results
filter_detections.py:
  working_directory: data
  detections: ../output/det/{canton}/single_year/merged_results/actual_dets_across_years.gpkg
  canton: {canton}
  infos:
    layers_directory: layers/{canton}/
    ticino:
      elevation: 900
      exclusion_list: ['building_areas', 'forests', 'zone_non_compatible_LPN', 'waters']
      aoi: AoI/ticino/limiti_cantone_2012_MN95.shp
      agri_area: Idoneità_Agricola.shp
      building_areas: Zones_batir_Ind.shp
      climatic_areas: zones_climatiques_compatibles_sda_tc.gpkg
      compatible_SDA: Compatibilita_LPN-SAC_20241010.gpkg
      forests: Fôrets.shp
      large_rivers: Grandi_corsi.shp
      protected_underground_water: Protezione_acque_sott.shp
      polluted_sites: Siti_inquinati.shp
      sda: Censimento_SAC_2023.shp
      slope: terrain_pente_TC_SA.gpkg
      waters: MU_Acque_TI_dissolved.gpkg
      zone_compatible_LPN: Zona_SAC_compatibile_con_i_disposti_LPN.gpkg
      zone_compatible_LPN_extensive: Zona_SAC_compatibile_con_i_disposti_LPN_previa_gestione_estensiva.gpkg
      zone_non_compatible_LPN: Zona_SAC_non_compatibile_con_i_disposti_LPN.gpkg
    vaud: 
      elevation: 4500
      exclusion_list: ['waters']
      aoi: AoI/vaud/MN95_CAD_TPR_LAD_MO_VD.shp
      buildings: Batiments_en_surface_MO.gpkg
      building_areas: affectation_zone_a_batir.gpkg
      climatic_areas: zones_climatiques_compatibles_sda_VD.gpkg
      polluted_sites: Sites_pollues_VD2022.gpkg
      sda: SDA_v5_2.gpkg
      slope: terrain_pente_VD.gpkg
      waters: lakes_VD.gpkg
  attribute_names: layers/attribute_names.xlsx
  dem: DEM/switzerland_dem_EPSG2056.tif
  score_threshold: 0.05 # detection score (from 0 to 1) provided by detectron2
  area_threshold: 100.0 # m2, area threshold under which polygons are discarded
  area_ratio_threshold: 0.25 # ratio between the original and the final valid area under which polygons are discarded
  compactness_threshold: 0.2
  assess:
    enable: False

result_analysis.py:
  working_directory: output/det/vaud/best_threshold
  output_directory: graphs
  detections: dets_merged_score-0dot05_A-100_A_ratio-0dot25_C-0dot2_elev-4500.gpkg
